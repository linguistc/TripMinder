// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripMinder.Infrastructure.Data;

#nullable disable

namespace TripMinder.Infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250206232728_Initial Demo")]
    partial class InitialDemo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TripMinder.Data.Entities.BusinessSocialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceCategoryId");

                    b.HasIndex("PlaceId");

                    b.ToTable("BusinessSocialProfiles");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Class");

                    b.HasDiscriminator().HasValue("Class");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Description");

                    b.HasDiscriminator().HasValue("Description");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TripMinder.Data.Entities.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AveragePricePerAdult")
                        .HasColumnType("float");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("DescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("HasKidsArea")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ClassId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Place");

                    b.HasDiscriminator().HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TripMinder.Data.Entities.PlaceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlaceCategories");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.PlaceImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceCategoryId");

                    b.HasIndex("PlaceId");

                    b.ToTable("PlaceImages");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.RestaurantFoodCategory", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("FoodCategoryId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId", "FoodCategoryId");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("RestaurantFoodCategories");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserBookMark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersBookMarks");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersHistory");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersImages");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersRatings");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserSocialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersSocialProfiles");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.AccomodationClass", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Class");

                    b.HasDiscriminator().HasValue("AccomodationClass");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.GeneralClass", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Class");

                    b.HasDiscriminator().HasValue("GeneralClass");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.AccomodationDescription", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Description");

                    b.HasDiscriminator().HasValue("AccomodationDescription");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.EntertainmentDescription", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Description");

                    b.HasDiscriminator().HasValue("EntertainmentDescription");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.RestaurantDescription", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Description");

                    b.HasDiscriminator().HasValue("RestaurantDescription");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismAreaDescription", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Description");

                    b.HasDiscriminator().HasValue("TourismAreaDescription");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Accomodation", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Place");

                    b.Property<int>("NumOfBeds")
                        .HasColumnType("int");

                    b.Property<int>("NumOfMembers")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Accomodation");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Entertainment", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Place");

                    b.HasDiscriminator().HasValue("Entertainment");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Restaurant", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Place");

                    b.HasDiscriminator().HasValue("Restaurant");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismArea", b =>
                {
                    b.HasBaseType("TripMinder.Data.Entities.Place");

                    b.HasDiscriminator().HasValue("TourismArea");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BusinessSocialProfile", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Place", "Place")
                        .WithMany("BusinessSocialProfiles")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Place", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Description", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("TripMinder.Data.Entities.Location", "Location", b1 =>
                        {
                            b1.Property<int>("PlaceId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double?>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double?>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("PlaceId");

                            b1.ToTable("Place");

                            b1.WithOwner()
                                .HasForeignKey("PlaceId");
                        });

                    b.Navigation("Class");

                    b.Navigation("Description");

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("PlaceCategory");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.PlaceImage", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Place", "Place")
                        .WithMany("Images")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.RestaurantFoodCategory", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.FoodCategory", "FoodCategory")
                        .WithMany("RestaurantFoodCategories")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Restaurant", "Restaurant")
                        .WithMany("RestaurantFoodCategories")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodCategory");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserBookMark", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("Bookmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserHistory", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserImage", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("Images")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserRating", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserSocialProfile", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("SocialMediaProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.FoodCategory", b =>
                {
                    b.Navigation("RestaurantFoodCategories");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Place", b =>
                {
                    b.Navigation("BusinessSocialProfiles");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.User", b =>
                {
                    b.Navigation("Bookmarks");

                    b.Navigation("History");

                    b.Navigation("Images");

                    b.Navigation("Ratings");

                    b.Navigation("SocialMediaProfiles");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Restaurant", b =>
                {
                    b.Navigation("RestaurantFoodCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
