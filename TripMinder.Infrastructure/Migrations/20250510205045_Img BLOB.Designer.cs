// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripMinder.Infrastructure.Data;

#nullable disable

namespace TripMinder.Infrastructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250510205045_Img BLOB")]
    partial class ImgBLOB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TripMinder.Data.Entities.Accomodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccomodationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AveragePricePerAdult")
                        .HasColumnType("float");

                    b.Property<string>("BedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ContactLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasKidsArea")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImgData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MapLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfBeds")
                        .HasColumnType("int");

                    b.Property<int>("NumOfMembers")
                        .HasColumnType("int");

                    b.Property<int>("PlaceTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int?>("TripSuggestionId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationTypeId");

                    b.HasIndex("ClassId");

                    b.HasIndex("PlaceTypeId");

                    b.HasIndex("TripSuggestionId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Accomodations");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.AccomodationClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccomodationsClasses");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.AccomodationSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccomodationId")
                        .HasColumnType("int");

                    b.Property<int>("SuggestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationId");

                    b.HasIndex("SuggestionId");

                    b.ToTable("AccomodationsSuggestions");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.AccomodationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccomodationTypes");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkAccomodation", b =>
                {
                    b.Property<int>("BookmarkId")
                        .HasColumnType("int");

                    b.Property<int>("AccomodationId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BookmarkId", "AccomodationId");

                    b.HasIndex("AccomodationId");

                    b.ToTable("BookMarkAccomodations");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkRestaurant", b =>
                {
                    b.Property<int>("BookmarkId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BookmarkId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("BookMarkRestaurants");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkTourism", b =>
                {
                    b.Property<int>("BookmarkId")
                        .HasColumnType("int");

                    b.Property<int>("TourismId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BookmarkId", "TourismId");

                    b.HasIndex("TourismId");

                    b.ToTable("BookMarkTourisms");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkTrip", b =>
                {
                    b.Property<int>("BookmarkId")
                        .HasColumnType("int");

                    b.Property<int>("TripSuggestionId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BookmarkId", "TripSuggestionId");

                    b.HasIndex("TripSuggestionId");

                    b.ToTable("BookMarkTrips");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookmarkEntertainment", b =>
                {
                    b.Property<int>("BookmarkId")
                        .HasColumnType("int");

                    b.Property<int>("EntertainmentId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BookmarkId", "EntertainmentId");

                    b.HasIndex("EntertainmentId");

                    b.ToTable("BookMarkEntertainments");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Entertainment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AveragePricePerAdult")
                        .HasColumnType("float");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ContactLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntertainmentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("HasKidsArea")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImgData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MapLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int?>("TripSuggestionId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("EntertainmentTypeId");

                    b.HasIndex("PlaceTypeId");

                    b.HasIndex("TripSuggestionId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Entertainments");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.EntertainmentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntertainmentsClasses");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.EntertainmentSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EntertainmentId")
                        .HasColumnType("int");

                    b.Property<int>("SuggestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntertainmentId");

                    b.HasIndex("SuggestionId");

                    b.ToTable("EntertainmentsSuggestions");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.EntertainmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntertainmentTypes");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.FoodCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.PlaceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlaceTypes");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AveragePricePerAdult")
                        .HasColumnType("float");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ContactLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoodCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("HasKidsArea")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImgData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MapLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int?>("TripSuggestionId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("FoodCategoryId");

                    b.HasIndex("PlaceTypeId");

                    b.HasIndex("TripSuggestionId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.RestaurantClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RestaurantsClasses");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.RestaurantSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("SuggestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("SuggestionId");

                    b.ToTable("RestaurantSuggestions");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AveragePricePerAdult")
                        .HasColumnType("float");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ContactLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasKidsArea")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImgData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MapLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("TourismTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TripSuggestionId")
                        .HasColumnType("int");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("PlaceTypeId");

                    b.HasIndex("TourismTypeId");

                    b.HasIndex("TripSuggestionId");

                    b.HasIndex("ZoneId");

                    b.ToTable("TourismAreas");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismAreaClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TourismAreaClasses");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SuggestionId")
                        .HasColumnType("int");

                    b.Property<int>("TourismAreaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuggestionId");

                    b.HasIndex("TourismAreaId");

                    b.ToTable("TourismSuggestions");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TourismAreaTypes");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TripSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TripSuggestions");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImgData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserBookMark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersBookMarks");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersHistory");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersImages");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersRatings");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserSocialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlatformName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersSocialProfiles");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Accomodation", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.AccomodationType", "AccomodationType")
                        .WithMany()
                        .HasForeignKey("AccomodationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.AccomodationClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.PlaceType", "PlaceType")
                        .WithMany()
                        .HasForeignKey("PlaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", null)
                        .WithMany("Accomodations")
                        .HasForeignKey("TripSuggestionId");

                    b.HasOne("TripMinder.Data.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccomodationType");

                    b.Navigation("Class");

                    b.Navigation("PlaceType");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.AccomodationSuggestion", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Accomodation", "Accomodation")
                        .WithMany()
                        .HasForeignKey("AccomodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", "TripSuggestion")
                        .WithMany()
                        .HasForeignKey("SuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accomodation");

                    b.Navigation("TripSuggestion");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkAccomodation", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Accomodation", "Accomodation")
                        .WithMany()
                        .HasForeignKey("AccomodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.UserBookMark", "UserBookMark")
                        .WithMany("BookMarkAccomodations")
                        .HasForeignKey("BookmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accomodation");

                    b.Navigation("UserBookMark");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkRestaurant", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.UserBookMark", "UserBookMark")
                        .WithMany("BookMarkRestaurants")
                        .HasForeignKey("BookmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("UserBookMark");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkTourism", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.UserBookMark", "UserBookMark")
                        .WithMany("BookMarkTourisms")
                        .HasForeignKey("BookmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TourismArea", "TourismArea")
                        .WithMany()
                        .HasForeignKey("TourismId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourismArea");

                    b.Navigation("UserBookMark");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookMarkTrip", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.UserBookMark", "UserBookMark")
                        .WithMany("BookMarkTrips")
                        .HasForeignKey("BookmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", "TripSuggestion")
                        .WithMany()
                        .HasForeignKey("TripSuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TripSuggestion");

                    b.Navigation("UserBookMark");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.BookmarkEntertainment", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.UserBookMark", "UserBookMark")
                        .WithMany("BookmarkEntertainments")
                        .HasForeignKey("BookmarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.Entertainment", "Entertainment")
                        .WithMany()
                        .HasForeignKey("EntertainmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entertainment");

                    b.Navigation("UserBookMark");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Entertainment", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.EntertainmentClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.EntertainmentType", "EntertainmentType")
                        .WithMany()
                        .HasForeignKey("EntertainmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.PlaceType", "PlaceType")
                        .WithMany()
                        .HasForeignKey("PlaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", null)
                        .WithMany("Entertainments")
                        .HasForeignKey("TripSuggestionId");

                    b.HasOne("TripMinder.Data.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("EntertainmentType");

                    b.Navigation("PlaceType");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.EntertainmentSuggestion", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Entertainment", "Entertainment")
                        .WithMany()
                        .HasForeignKey("EntertainmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", "TripSuggestion")
                        .WithMany()
                        .HasForeignKey("SuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entertainment");

                    b.Navigation("TripSuggestion");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Restaurant", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.RestaurantClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.FoodCategory", "FoodCategory")
                        .WithMany()
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.PlaceType", "PlaceType")
                        .WithMany()
                        .HasForeignKey("PlaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("TripSuggestionId");

                    b.HasOne("TripMinder.Data.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("FoodCategory");

                    b.Navigation("PlaceType");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.RestaurantSuggestion", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", "TripSuggestion")
                        .WithMany()
                        .HasForeignKey("SuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");

                    b.Navigation("TripSuggestion");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismArea", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.TourismAreaClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.PlaceType", "PlaceType")
                        .WithMany()
                        .HasForeignKey("PlaceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TourismType", "TourismType")
                        .WithMany()
                        .HasForeignKey("TourismTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", null)
                        .WithMany("TourismAreas")
                        .HasForeignKey("TripSuggestionId");

                    b.HasOne("TripMinder.Data.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("PlaceType");

                    b.Navigation("TourismType");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TourismSuggestion", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.TripSuggestion", "TripSuggestion")
                        .WithMany()
                        .HasForeignKey("SuggestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripMinder.Data.Entities.TourismArea", "TourismArea")
                        .WithMany()
                        .HasForeignKey("TourismAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourismArea");

                    b.Navigation("TripSuggestion");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserBookMark", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("Bookmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserHistory", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("History")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserImage", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserRating", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserSocialProfile", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.User", "User")
                        .WithMany("SocialMediaProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.Zone", b =>
                {
                    b.HasOne("TripMinder.Data.Entities.Governorate", "Governorate")
                        .WithMany()
                        .HasForeignKey("GovernorateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.TripSuggestion", b =>
                {
                    b.Navigation("Accomodations");

                    b.Navigation("Entertainments");

                    b.Navigation("Restaurants");

                    b.Navigation("TourismAreas");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.User", b =>
                {
                    b.Navigation("Bookmarks");

                    b.Navigation("History");

                    b.Navigation("Ratings");

                    b.Navigation("SocialMediaProfiles");
                });

            modelBuilder.Entity("TripMinder.Data.Entities.UserBookMark", b =>
                {
                    b.Navigation("BookMarkAccomodations");

                    b.Navigation("BookMarkRestaurants");

                    b.Navigation("BookMarkTourisms");

                    b.Navigation("BookMarkTrips");

                    b.Navigation("BookmarkEntertainments");
                });
#pragma warning restore 612, 618
        }
    }
}
